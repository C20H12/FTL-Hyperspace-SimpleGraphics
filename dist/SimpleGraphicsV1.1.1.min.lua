mods.libs=mods.libs or{}mods.libs.SG={name="SimpleGraphics",version="1.1",author="C20H12untitled"}mods.libs.SG.SimpleSprite={_isShowing=true,_timer=0,_shouldHide=false,_texture=nil,_state="off",new=function(self,a)local b={imgName=a}b._texture=Hyperspace.Resources:GetImageId(a..".png")self.__index=self;return setmetatable(b,self)end,_processModifiers=function(self,c)local d=c.width or self._texture.width;local e=c.height or self._texture.height;local f=1280/2-d/2+(c.Xalign or 0)local g=720/2-e/2-(c.Yalign or 0)local h=c.rotation or 0;local i=c.color or Graphics.GL_Color(1,1,1,1)local j=c.isMirror or false;local k={f,g,d,e,h,i,j}return k end,toggleState=function(self)if self._state=="off"then self._state="on"else self._state="off"end end,getState=function(self)return self._state end,show=function(self,c)if not self._isShowing then return end;c=c or{}local l=self:_processModifiers(c)Graphics.CSurface.GL_BlitImage(self._texture,table.unpack(l))end,hide=function(self)local m=self._timer~=0;if self._shouldHide or not m then self._isShowing=false;self._shouldHide=false end;return self._isShowing end,wait=function(self,n)if not self._isShowing then return n+1 end;self._timer=self._timer+Hyperspace.FPS.SpeedFactor/16;if self._timer>n then self._shouldHide=true end;return self._timer end,reset=function(self)self._timer=0;self._isShowing=true;self._shouldHide=false end,colorFactory=function(o,p,q,r)local s,t,u,v;if type(o)=="string"then s=tonumber(o:sub(1,2),16)/255;t=tonumber(o:sub(3,4),16)/255;u=tonumber(o:sub(5,6),16)/255;v=tonumber(o:sub(7,8),16)/255 else s=o/255;t=p/255;u=q/255;v=r end;return Graphics.GL_Color(s,t,u,v)end,randint=function(w,x)return Hyperspace.random32()%(x+1-w)+w end}local y=mods.libs.SG.Polygon;mods.libs.SG.SimpleAnimatedSprite=mods.libs.SG.SimpleSprite:new('null')mods.libs.SG.SimpleAnimatedSprite._animTimer=0;mods.libs.SG.SimpleAnimatedSprite.new=function(self,a,z,A)local b=mods.libs.SG.SimpleSprite.new(self,a)b.frameCount=z;b.rows=A or 1;self.__index=self;return setmetatable(b,self)end;mods.libs.SG.SimpleAnimatedSprite._processModifiers=function(self,c)local d=c.width or self._texture.width/self.frameCount;local e=c.height or self._texture.height/self.rows;local f=1280/2-d/2+(c.Xalign or 0)local g=720/2-e/2-(c.Yalign or 0)local i=c.color or Graphics.GL_Color(1,1,1,1)local j=c.isMirror or false;local k={f,g,d,e,i,j}return k end;mods.libs.SG.SimpleAnimatedSprite._renderAnim=function(self,B,C)local D=B/self.frameCount;local E=(B+1)/self.frameCount;Graphics.CSurface.GL_BlitImagePartial(self._texture,C[1],C[2],C[3],C[4],D,E,1,0,1,C[5],C[6])end;mods.libs.SG.SimpleAnimatedSprite._renderMultilineAnim=function(self,B,C)local F=math.floor(B/self.frameCount)local G=B%self.frameCount;local H=G/self.frameCount;local I=(G+1)/self.frameCount;local J=F/self.rows;local K=(F+1)/self.rows;Graphics.CSurface.GL_BlitImagePartial(self._texture,C[1],C[2],C[3],C[4],H,I,J,K,1,C[5],C[6])end;mods.libs.SG.SimpleAnimatedSprite.show=function(self,L,c)if not self._isShowing then return true end;self._animTimer=self._animTimer+Hyperspace.FPS.SpeedFactor/16;local M=math.floor(self._animTimer*self.frameCount/L)local c=c or{}local N=self:_processModifiers(c)if self.rows==1 then self:_renderAnim(M,N)else self:_renderMultilineAnim(M,N)end;if M>=self.frameCount*self.rows then self._isShowing=false end;return false end;mods.libs.SG.SimpleAnimatedSprite.reset=function(self)self._timer=0;self._animTimer=0;self._isShowing=true;self._shouldHide=false end;mods.libs.SG.Polygon={signedPolyArea=function(O)local P=0;local Q=#O;local R=O[Q]for S=1,Q do local T=O[S]P=P+(T[1]+R[1])*(T[2]-R[2])R=T end;return P end,polyArea=function(self,O)local P=self.signedPolyArea(O)return math.abs(P/2)end,isPolyCCW=function(self,O)return self.signedPolyArea(O)>0 end,polyReverse=function(O)local U={}local Q=#O;for S=1,Q do U[S]=O[Q-S+1]end;return U end,signedTriArea=function(V,W,X)return(V[1]-X[1])*(W[2]-X[2])-(V[2]-X[2])*(W[1]-X[1])end,pointInTri=function(Y,Z,_,a0)local a1=Y[1]local a2=Y[2]local a3=Z[1]-a1;local a4=Z[2]-a2;local a5=_[1]-a1;local a6=_[2]-a2;local a7=a0[1]-a1;local a8=a0[2]-a2;local a9=a3*a6-a4*a5;local aa=a5*a8-a6*a7;local ab=a7*a4-a8*a3;local ac=a9<0;local ad=aa<0;local ae=ab<0;if ac~=ad then return false end;return ac==ae end,left={},right={},isEar=function(self,V,W,X)if self.signedTriArea(V,W,X)>=0 then local af=self.right[X]repeat local ag=self.left[af]local ah=self.right[af]if self.signedTriArea(ag,af,ah)<=0 then if self.pointInTri(af,V,W,X)then return false end end;af=ah until af==V;return true end;return false end,triangulatePoly=function(self,O)if not self:isPolyCCW(O)then O=self.polyReverse(O)end;local ai=#O;for S=1,ai do local aj=O[S]self.left[aj],self.right[aj]=O[S-1],O[S+1]end;local ak=O[1]local R=O[ai]self.left[ak]=R;self.right[R]=ak;local al={}local am=0;local an=ak;while ai>=3 and am<=ai do local ao,ap=self.left[an],self.right[an]if ai>3 and self:isEar(ao,an,ap)then table.insert(al,{ao,an,ap})self.left[ap],self.right[ao]=ao,ap;self.left[an],self.right[an]=nil,nil;am=0;an=ao else am=am+1;an=ap end end;return al end}mods.libs.SG.SimpleShape=mods.libs.SG.SimpleSprite:new("null")mods.libs.SG.SimpleShape.new=function(self,aq,ar)local b={shape=aq,sides=ar}self.__index=self;return setmetatable(b,self)end;mods.libs.SG.SimpleShape._renderRect=function(c)local d=c.width or 0;local e=c.height or 0;local f=1280/2-d/2+(c.Xalign or 0)local g=720/2-e/2-(c.Yalign or 0)local i=c.color or Graphics.GL_Color(1,1,1,1)local as=c.borderColor or Graphics.GL_Color(1,1,1,1)local at=c.borderWidth or 0;Graphics.CSurface.GL_DrawRect(f,g,d,e,i)Graphics.CSurface.GL_DrawRectOutline(f,g,d,e,as,at)end;mods.libs.SG.SimpleShape._renderLine=function(c)local au={1280/2,720/2}local d=c.width or 1;local i=c.color or Graphics.GL_Color(1,1,1,1)local av={}for S=1,2 do c["point"..S]=c["point"..S]or au;av[S]={au[1]+c["point"..S][1],au[2]-c["point"..S][2]}end;Graphics.CSurface.GL_DrawLine(av[1][1],av[1][2],av[2][1],av[2][2],d,i)end;mods.libs.SG.SimpleShape._renderTriangle=function(self,c)local au={1280/2,720/2}local av={}for S=1,3 do c["point"..S]=c["point"..S]or au;av[S]={au[1]+c["point"..S][1],au[2]-c["point"..S][2]}end;local i=c.color or Graphics.GL_Color(1,1,1,1)local as=c.borderColor or Graphics.GL_Color(1,1,1,1)local at=c.borderWidth or 0;Graphics.CSurface.GL_DrawTriangle(Hyperspace.Point(table.unpack(av[1])),Hyperspace.Point(table.unpack(av[2])),Hyperspace.Point(table.unpack(av[3])),i)for S=1,3 do local aw=av[S]local ax=av[S+1]or av[1]Graphics.CSurface.GL_DrawLine(aw[1],aw[2],ax[1],ax[2],at,as)end end;mods.libs.SG.SimpleShape._renderPolygon=function(self,c)local ay=y:triangulatePoly(c.points)local i=c.color or Graphics.GL_Color(1,1,1,1)local as=c.borderColor or Graphics.GL_Color(1,1,1,1)local at=c.borderWidth or 0;for S=1,#ay do local az=ay[S]local aw=az[1]local ax=az[2]local aA=az[3]self:_renderTriangle({point1=aw,point2=ax,point3=aA,color=i})end;for S=1,#c.points do local aw=c.points[S]local ax=c.points[S+1]or c.points[1]self._renderLine({point1=aw,point2=ax,width=at,color=as})end end;mods.libs.SG.SimpleShape.show=function(self,c)if not self._isShowing then return end;if self.shape=="rect"then self._renderRect(c)elseif self.shape=="triangle"then self._renderTriangle(self,c)elseif self.shape=="line"then self._renderLine(c)elseif self.shape=="polygon"then self._renderPolygon(self,c)else error("Unknown shape: "..self.shape)end end