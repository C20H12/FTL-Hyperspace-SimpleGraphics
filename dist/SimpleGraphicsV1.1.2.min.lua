mods.libs=mods.libs or{}mods.libs.SG={name="SimpleGraphics",version="1.1",author="C20H12untitled"}mods.libs.SG.SimpleSprite={_isShowing=true,_timer=0,_shouldHide=false,_texture=nil,_state="off",new=function(self,a)local b={imgName=a}b._texture=Hyperspace.Resources:GetImageId(a..".png")self.__index=self;return setmetatable(b,self)end,_processModifiers=function(self,c)local d=c.width or self._texture.width;local e=c.height or self._texture.height;local f=1280/2-d/2+(c.Xalign or 0)local g=720/2-e/2-(c.Yalign or 0)local h=c.rotation or 0;local i=c.color or Graphics.GL_Color(1,1,1,1)local j=c.isMirror or false;local k={f,g,d,e,h,i,j}return k end,toggleState=function(self)if self._state=="off"then self._state="on"else self._state="off"end end,getState=function(self)return self._state end,show=function(self,c)if not self._isShowing then return end;c=c or{}local l=self:_processModifiers(c)Graphics.CSurface.GL_BlitImage(self._texture,table.unpack(l))end,hide=function(self)local m=self._timer~=0;if self._shouldHide or not m then self._isShowing=false;self._shouldHide=false end;return self._isShowing end,wait=function(self,n)if not self._isShowing then return n+1 end;self._timer=self._timer+Hyperspace.FPS.SpeedFactor/16;if self._timer>n then self._shouldHide=true end;return self._timer end,reset=function(self)self._timer=0;self._isShowing=true;self._shouldHide=false end,colorFactory=function(o,p,q,r)local s,t,u,v;if type(o)=="string"then s=tonumber(o:sub(1,2),16)/255;t=tonumber(o:sub(3,4),16)/255;u=tonumber(o:sub(5,6),16)/255;v=tonumber(o:sub(7,8),16)/255 else s=o/255;t=p/255;u=q/255;v=r end;return Graphics.GL_Color(s,t,u,v)end,randint=function(w,x)return Hyperspace.random32()%(x+1-w)+w end}mods.libs.SG.SimpleAnimatedSprite=mods.libs.SG.SimpleSprite:new('null')mods.libs.SG.SimpleAnimatedSprite._animTimer=0;mods.libs.SG.SimpleAnimatedSprite.new=function(self,a,y,z)local b=mods.libs.SG.SimpleSprite.new(self,a)b.frameCount=y;b.rows=z or 1;self.__index=self;return setmetatable(b,self)end;mods.libs.SG.SimpleAnimatedSprite._processModifiers=function(self,c)local d=c.width or self._texture.width/self.frameCount;local e=c.height or self._texture.height/self.rows;local f=1280/2-d/2+(c.Xalign or 0)local g=720/2-e/2-(c.Yalign or 0)local i=c.color or Graphics.GL_Color(1,1,1,1)local j=c.isMirror or false;local k={f,g,d,e,i,j}return k end;mods.libs.SG.SimpleAnimatedSprite._renderAnim=function(self,A,B)local C=A/self.frameCount;local D=(A+1)/self.frameCount;Graphics.CSurface.GL_BlitImagePartial(self._texture,B[1],B[2],B[3],B[4],C,D,1,0,1,B[5],B[6])end;mods.libs.SG.SimpleAnimatedSprite._renderMultilineAnim=function(self,A,B)local E=math.floor(A/self.frameCount)local F=A%self.frameCount;local G=F/self.frameCount;local H=(F+1)/self.frameCount;local I=E/self.rows;local J=(E+1)/self.rows;Graphics.CSurface.GL_BlitImagePartial(self._texture,B[1],B[2],B[3],B[4],G,H,I,J,1,B[5],B[6])end;mods.libs.SG.SimpleAnimatedSprite.show=function(self,K,c)if not self._isShowing then return true end;self._animTimer=self._animTimer+Hyperspace.FPS.SpeedFactor/16;local L=math.floor(self._animTimer*self.frameCount/K)local c=c or{}local M=self:_processModifiers(c)if self.rows==1 then self:_renderAnim(L,M)else self:_renderMultilineAnim(L,M)end;if L>=self.frameCount*self.rows then self._isShowing=false end;return false end;mods.libs.SG.SimpleAnimatedSprite.reset=function(self)self._timer=0;self._animTimer=0;self._isShowing=true;self._shouldHide=false end;mods.libs.SG.Polygon={signedPolyArea=function(N)local O=0;local P=#N;local Q=N[P]for R=1,P do local S=N[R]O=O+(S[1]+Q[1])*(S[2]-Q[2])Q=S end;return O end,polyArea=function(self,N)local O=self.signedPolyArea(N)return math.abs(O/2)end,isPolyCCW=function(self,N)return self.signedPolyArea(N)>0 end,polyReverse=function(N)local T={}local P=#N;for R=1,P do T[R]=N[P-R+1]end;return T end,signedTriArea=function(U,V,W)return(U[1]-W[1])*(V[2]-W[2])-(U[2]-W[2])*(V[1]-W[1])end,pointInTri=function(X,Y,Z,_)local a0=X[1]local a1=X[2]local a2=Y[1]-a0;local a3=Y[2]-a1;local a4=Z[1]-a0;local a5=Z[2]-a1;local a6=_[1]-a0;local a7=_[2]-a1;local a8=a2*a5-a3*a4;local a9=a4*a7-a5*a6;local aa=a6*a3-a7*a2;local ab=a8<0;local ac=a9<0;local ad=aa<0;if ab~=ac then return false end;return ab==ad end,left={},right={},isEar=function(self,U,V,W)if self.signedTriArea(U,V,W)>=0 then local ae=self.right[W]repeat local af=self.left[ae]local ag=self.right[ae]if self.signedTriArea(af,ae,ag)<=0 then if self.pointInTri(ae,U,V,W)then return false end end;ae=ag until ae==U;return true end;return false end,triangulatePoly=function(self,N)if not self:isPolyCCW(N)then N=self.polyReverse(N)end;local ah=#N;for R=1,ah do local ai=N[R]self.left[ai],self.right[ai]=N[R-1],N[R+1]end;local aj=N[1]local Q=N[ah]self.left[aj]=Q;self.right[Q]=aj;local ak={}local al=0;local am=aj;while ah>=3 and al<=ah do local an,ao=self.left[am],self.right[am]if ah>3 and self:isEar(an,am,ao)then table.insert(ak,{an,am,ao})self.left[ao],self.right[an]=an,ao;self.left[am],self.right[am]=nil,nil;al=0;am=an else al=al+1;am=ao end end;return ak end}mods.libs.SG.SimpleShape=mods.libs.SG.SimpleSprite:new("null")mods.libs.SG.SimpleShape.new=function(self,ap,aq)local b={shape=ap,sides=aq}self.__index=self;return setmetatable(b,self)end;mods.libs.SG.SimpleShape._renderRect=function(c)local d=c.width or 0;local e=c.height or 0;local f=1280/2-d/2+(c.Xalign or 0)local g=720/2-e/2-(c.Yalign or 0)local i=c.color or Graphics.GL_Color(1,1,1,1)local ar=c.borderColor or Graphics.GL_Color(1,1,1,1)local as=c.borderWidth or 0;Graphics.CSurface.GL_DrawRect(f,g,d,e,i)Graphics.CSurface.GL_DrawRectOutline(f,g,d,e,ar,as)end;mods.libs.SG.SimpleShape._renderLine=function(c)local at={1280/2,720/2}local d=c.width or 1;local i=c.color or Graphics.GL_Color(1,1,1,1)local au={}for R=1,2 do c["point"..R]=c["point"..R]or at;au[R]={at[1]+c["point"..R][1],at[2]-c["point"..R][2]}end;Graphics.CSurface.GL_DrawLine(au[1][1],au[1][2],au[2][1],au[2][2],d,i)end;mods.libs.SG.SimpleShape._renderTriangle=function(self,c)local at={1280/2,720/2}local au={}for R=1,3 do c["point"..R]=c["point"..R]or at;au[R]={at[1]+c["point"..R][1],at[2]-c["point"..R][2]}end;local i=c.color or Graphics.GL_Color(1,1,1,1)local ar=c.borderColor or Graphics.GL_Color(1,1,1,1)local as=c.borderWidth or 0;Graphics.CSurface.GL_DrawTriangle(Hyperspace.Point(table.unpack(au[1])),Hyperspace.Point(table.unpack(au[2])),Hyperspace.Point(table.unpack(au[3])),i)for R=1,3 do local av=au[R]local aw=au[R+1]or au[1]Graphics.CSurface.GL_DrawLine(av[1],av[2],aw[1],aw[2],as,ar)end end;mods.libs.SG.SimpleShape._renderPolygon=function(self,c)local ax=mods.libs.SG.Polygon:triangulatePoly(c.points)local i=c.color or Graphics.GL_Color(1,1,1,1)local ar=c.borderColor or Graphics.GL_Color(1,1,1,1)local as=c.borderWidth or 0;for R=1,#ax do local ay=ax[R]local av=ay[1]local aw=ay[2]local az=ay[3]self:_renderTriangle({point1=av,point2=aw,point3=az,color=i})end;if as>0 then for R=1,#c.points do local av=c.points[R]local aw=c.points[R+1]or c.points[1]self._renderLine({point1=av,point2=aw,width=as,color=ar})end end end;mods.libs.SG.SimpleShape.show=function(self,c)if not self._isShowing then return end;if self.shape=="rect"then self._renderRect(c)elseif self.shape=="triangle"then self._renderTriangle(self,c)elseif self.shape=="line"then self._renderLine(c)elseif self.shape=="polygon"then self._renderPolygon(self,c)else error("Unknown shape: "..self.shape)end end;_G['Draw_Amongus']=function()local aA={{154,-117},{169,-270},{259,-293},{257,86},{151,221},{8,226},{-123,108},{-116,-273},{-14,-282},{-4,-120}}local aB={{-14,55},{-15,12},{9,-24},{118,-27},{154,-4},{153,47},{140,79},{27,80},{-13,54}}local aC=mods.libs.SG.SimpleShape;local aD=mods.libs.SG.SimpleSprite.colorFactory;script.on_render_event(Defines.RenderEvents.GUI_CONTAINER,function()end,function()aC:new("polygon"):show({points=aA,color=aD("ff0000ff"),borderWidth=5})aC:new("polygon"):show({points=aB,color=aD("47a9ffff"),borderWidth=5})Graphics.freetype.easy_print(20,400,580,"GET SUS'ED LOL")end)end